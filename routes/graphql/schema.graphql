"A datetime string with format 'Y-m-d H:i:s', e.g. '2018-01-01 13:00:00'."
scalar DateTime @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\DateTime")

"A date string with format 'Y-m-d', e.g. '2011-05-23'."
scalar Date @scalar(class: "Nuwave\\Lighthouse\\Schema\\Types\\Scalars\\Date")

type Query {
    users: [User!]! @paginate(type: "paginator" model: "App\\User")
    user(id: ID @eq): User @find(model: "App\\User")
    posts: [Post] @paginate(type: "paginator" model: "App\\Post")
}

enum UserRole {
    ADMIN
    USER
}

type Mutation {
    createUser(
        name: String @rules(apply: ["required"])
        email: String @rules(apply: ["required", "email", "unique:users,email"]),
        role: UserRole @rules(apply: ["required"]),
        password: String @rules(apply: ["required"]) @bcrypt
    ): User @create(model: "App\\User")
    updateUser(
        id: ID @rules(apply: ["required"])
        name: String
        email: String @rules(apply: ["email"])
    ): User @update(model: "App\\User")
    deleteUser(
        id: ID @rules(apply: ["required"])
    ): User @delete(model: "App\\User")
    createPost(
        title: String @rules(apply: ["required"])
        body: String @rules(apply: ["required"])
        user_id: Int @rules(apply: ["required"])
    ): Post @create(model: "App\\Post")
    signUp(name: String!, email: String!): User!
}

type User {
    id: ID!
    name: String!
    email: String!
    role: UserRole!
    posts: [Post]
    created_at: DateTime!
    updated_at: DateTime!
}

type Post {
    id: ID!
    title: String!
    body: String!
    user: User!
    created_at: DateTime!
    updated_at: DateTime!
}
